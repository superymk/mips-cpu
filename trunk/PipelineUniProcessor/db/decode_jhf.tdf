--lpm_decode CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="MAX7000S" IGNORE_CASCADE_BUFFERS="OFF" LPM_DECODES=32 LPM_WIDTH=5 data enable eq CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 9.0 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_compare 2009:02:03:01:43:16:SJ cbx_lpm_decode 2008:05:19:10:39:27:SJ cbx_mgl 2009:01:29:16:12:07:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cmpr_6mc (dataa[5..0], datab[5..0])
RETURNS ( aeb);

--synthesis_resources = 
SUBDESIGN decode_jhf
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	cmpr1 : cmpr_6mc;
	cmpr10 : cmpr_6mc;
	cmpr11 : cmpr_6mc;
	cmpr12 : cmpr_6mc;
	cmpr13 : cmpr_6mc;
	cmpr14 : cmpr_6mc;
	cmpr15 : cmpr_6mc;
	cmpr16 : cmpr_6mc;
	cmpr17 : cmpr_6mc;
	cmpr18 : cmpr_6mc;
	cmpr19 : cmpr_6mc;
	cmpr2 : cmpr_6mc;
	cmpr20 : cmpr_6mc;
	cmpr21 : cmpr_6mc;
	cmpr22 : cmpr_6mc;
	cmpr23 : cmpr_6mc;
	cmpr24 : cmpr_6mc;
	cmpr25 : cmpr_6mc;
	cmpr26 : cmpr_6mc;
	cmpr27 : cmpr_6mc;
	cmpr28 : cmpr_6mc;
	cmpr29 : cmpr_6mc;
	cmpr3 : cmpr_6mc;
	cmpr30 : cmpr_6mc;
	cmpr31 : cmpr_6mc;
	cmpr32 : cmpr_6mc;
	cmpr4 : cmpr_6mc;
	cmpr5 : cmpr_6mc;
	cmpr6 : cmpr_6mc;
	cmpr7 : cmpr_6mc;
	cmpr8 : cmpr_6mc;
	cmpr9 : cmpr_6mc;
	const_data0w[4..0]	: WIRE;
	const_data10w[4..0]	: WIRE;
	const_data11w[4..0]	: WIRE;
	const_data12w[4..0]	: WIRE;
	const_data13w[4..0]	: WIRE;
	const_data14w[4..0]	: WIRE;
	const_data15w[4..0]	: WIRE;
	const_data16w[4..0]	: WIRE;
	const_data17w[4..0]	: WIRE;
	const_data18w[4..0]	: WIRE;
	const_data19w[4..0]	: WIRE;
	const_data1w[4..0]	: WIRE;
	const_data20w[4..0]	: WIRE;
	const_data21w[4..0]	: WIRE;
	const_data22w[4..0]	: WIRE;
	const_data23w[4..0]	: WIRE;
	const_data24w[4..0]	: WIRE;
	const_data25w[4..0]	: WIRE;
	const_data26w[4..0]	: WIRE;
	const_data27w[4..0]	: WIRE;
	const_data28w[4..0]	: WIRE;
	const_data29w[4..0]	: WIRE;
	const_data2w[4..0]	: WIRE;
	const_data30w[4..0]	: WIRE;
	const_data31w[4..0]	: WIRE;
	const_data3w[4..0]	: WIRE;
	const_data4w[4..0]	: WIRE;
	const_data5w[4..0]	: WIRE;
	const_data6w[4..0]	: WIRE;
	const_data7w[4..0]	: WIRE;
	const_data8w[4..0]	: WIRE;
	const_data9w[4..0]	: WIRE;
	eq_node[31..0]	: WIRE;

BEGIN 
	cmpr1.dataa[] = ( enable, data[]);
	cmpr1.datab[] = ( B"1", const_data0w[]);
	cmpr10.dataa[] = ( enable, data[]);
	cmpr10.datab[] = ( B"1", const_data9w[]);
	cmpr11.dataa[] = ( enable, data[]);
	cmpr11.datab[] = ( B"1", const_data10w[]);
	cmpr12.dataa[] = ( enable, data[]);
	cmpr12.datab[] = ( B"1", const_data11w[]);
	cmpr13.dataa[] = ( enable, data[]);
	cmpr13.datab[] = ( B"1", const_data12w[]);
	cmpr14.dataa[] = ( enable, data[]);
	cmpr14.datab[] = ( B"1", const_data13w[]);
	cmpr15.dataa[] = ( enable, data[]);
	cmpr15.datab[] = ( B"1", const_data14w[]);
	cmpr16.dataa[] = ( enable, data[]);
	cmpr16.datab[] = ( B"1", const_data15w[]);
	cmpr17.dataa[] = ( enable, data[]);
	cmpr17.datab[] = ( B"1", const_data16w[]);
	cmpr18.dataa[] = ( enable, data[]);
	cmpr18.datab[] = ( B"1", const_data17w[]);
	cmpr19.dataa[] = ( enable, data[]);
	cmpr19.datab[] = ( B"1", const_data18w[]);
	cmpr2.dataa[] = ( enable, data[]);
	cmpr2.datab[] = ( B"1", const_data1w[]);
	cmpr20.dataa[] = ( enable, data[]);
	cmpr20.datab[] = ( B"1", const_data19w[]);
	cmpr21.dataa[] = ( enable, data[]);
	cmpr21.datab[] = ( B"1", const_data20w[]);
	cmpr22.dataa[] = ( enable, data[]);
	cmpr22.datab[] = ( B"1", const_data21w[]);
	cmpr23.dataa[] = ( enable, data[]);
	cmpr23.datab[] = ( B"1", const_data22w[]);
	cmpr24.dataa[] = ( enable, data[]);
	cmpr24.datab[] = ( B"1", const_data23w[]);
	cmpr25.dataa[] = ( enable, data[]);
	cmpr25.datab[] = ( B"1", const_data24w[]);
	cmpr26.dataa[] = ( enable, data[]);
	cmpr26.datab[] = ( B"1", const_data25w[]);
	cmpr27.dataa[] = ( enable, data[]);
	cmpr27.datab[] = ( B"1", const_data26w[]);
	cmpr28.dataa[] = ( enable, data[]);
	cmpr28.datab[] = ( B"1", const_data27w[]);
	cmpr29.dataa[] = ( enable, data[]);
	cmpr29.datab[] = ( B"1", const_data28w[]);
	cmpr3.dataa[] = ( enable, data[]);
	cmpr3.datab[] = ( B"1", const_data2w[]);
	cmpr30.dataa[] = ( enable, data[]);
	cmpr30.datab[] = ( B"1", const_data29w[]);
	cmpr31.dataa[] = ( enable, data[]);
	cmpr31.datab[] = ( B"1", const_data30w[]);
	cmpr32.dataa[] = ( enable, data[]);
	cmpr32.datab[] = ( B"1", const_data31w[]);
	cmpr4.dataa[] = ( enable, data[]);
	cmpr4.datab[] = ( B"1", const_data3w[]);
	cmpr5.dataa[] = ( enable, data[]);
	cmpr5.datab[] = ( B"1", const_data4w[]);
	cmpr6.dataa[] = ( enable, data[]);
	cmpr6.datab[] = ( B"1", const_data5w[]);
	cmpr7.dataa[] = ( enable, data[]);
	cmpr7.datab[] = ( B"1", const_data6w[]);
	cmpr8.dataa[] = ( enable, data[]);
	cmpr8.datab[] = ( B"1", const_data7w[]);
	cmpr9.dataa[] = ( enable, data[]);
	cmpr9.datab[] = ( B"1", const_data8w[]);
	const_data0w[] = B"00000";
	const_data10w[] = B"01010";
	const_data11w[] = B"01011";
	const_data12w[] = B"01100";
	const_data13w[] = B"01101";
	const_data14w[] = B"01110";
	const_data15w[] = B"01111";
	const_data16w[] = B"10000";
	const_data17w[] = B"10001";
	const_data18w[] = B"10010";
	const_data19w[] = B"10011";
	const_data1w[] = B"00001";
	const_data20w[] = B"10100";
	const_data21w[] = B"10101";
	const_data22w[] = B"10110";
	const_data23w[] = B"10111";
	const_data24w[] = B"11000";
	const_data25w[] = B"11001";
	const_data26w[] = B"11010";
	const_data27w[] = B"11011";
	const_data28w[] = B"11100";
	const_data29w[] = B"11101";
	const_data2w[] = B"00010";
	const_data30w[] = B"11110";
	const_data31w[] = B"11111";
	const_data3w[] = B"00011";
	const_data4w[] = B"00100";
	const_data5w[] = B"00101";
	const_data6w[] = B"00110";
	const_data7w[] = B"00111";
	const_data8w[] = B"01000";
	const_data9w[] = B"01001";
	eq[] = eq_node[];
	eq_node[] = ( cmpr32.aeb, cmpr31.aeb, cmpr30.aeb, cmpr29.aeb, cmpr28.aeb, cmpr27.aeb, cmpr26.aeb, cmpr25.aeb, cmpr24.aeb, cmpr23.aeb, cmpr22.aeb, cmpr21.aeb, cmpr20.aeb, cmpr19.aeb, cmpr18.aeb, cmpr17.aeb, cmpr16.aeb, cmpr15.aeb, cmpr14.aeb, cmpr13.aeb, cmpr12.aeb, cmpr11.aeb, cmpr10.aeb, cmpr9.aeb, cmpr8.aeb, cmpr7.aeb, cmpr6.aeb, cmpr5.aeb, cmpr4.aeb, cmpr3.aeb, cmpr2.aeb, cmpr1.aeb);
END;
--VALID FILE
